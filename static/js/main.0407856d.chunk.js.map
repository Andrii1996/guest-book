{"version":3,"sources":["api/getComment.js","App.js","reportWebVitals.js","index.js"],"names":["comment","a","fetch","method","headers","body","JSON","stringify","ok","Error","getComments","resp","json","id","then","res","text","App","useState","name","setName","setComment","comments","setComments","getAllComments","data","console","log","useEffect","deleteComment","deleteCommentById","className","style","display","flexDirection","alignItems","textAlign","Form","width","onSubmit","event","preventDefault","saveComment","e","error","Control","margin","type","value","placeholder","onChange","target","required","Button","size","Card","ListGroup","map","el","Item","justifyContent","variant","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0407856d.chunk.js","sourcesContent":["export async function setComment(comment) {\r\n  const response = await fetch(`/comment`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify(comment)\r\n  });\r\n  \r\n  if (!response.ok) throw new Error('did not save comment');\r\n}\r\n\r\nexport async function getComments() {\r\n  let resp = await fetch(`/`)\r\n  \r\n  if (!resp.ok) {\r\n    throw new Error('did not get all comments');\r\n  }\r\n\r\n  return resp.json();\r\n}\r\n\r\nexport async function deleteCommentById(id) {\r\n  \r\n  await fetch(`${id}`, {\r\n    method: 'DELETE',\r\n  })\r\n  .then(res => res.text())\r\n  .then(res => res)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { getComments, setComment as saveComment, deleteCommentById } from \"./api/getComment\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Form, Card, ListGroup } from 'react-bootstrap';\r\n\r\nexport function App() {\r\n\r\nconst [name, setName] = useState('');\r\nconst [comment, setComment] = useState('');\r\nconst [comments, setComments] = useState([]);\r\n\r\n  async function getAllComments() {\r\n    const data = await getComments();\r\n    console.log('data', data);\r\n    if (!data) return;\r\n    setComments(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllComments();\r\n  }, [comments]);\r\n\r\n  const handleChangeName = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const handleChangeComment = (event) => {\r\n    setComment(event.target.value);\r\n  }\r\n\r\n  const handleSubmitComment = event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      saveComment({comment, name});\r\n    } catch(e) {\r\n      console.error(e)\r\n    }\r\n\r\n    getAllComments();\r\n\r\n    setComment('');\r\n  }\r\n\r\n  const deleteComment = id => {\r\n    deleteCommentById(id);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        textAlign: 'center'\r\n      }}\r\n    >\r\n      <Form style={{width: '450px'}} onSubmit={handleSubmitComment}>\r\n        <Form.Control\r\n          style={{\r\n            margin: '20px 0',\r\n            textAlign: 'center'\r\n          }}\r\n          id=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          placeholder='Enter your name:'\r\n          onChange={handleChangeName}\r\n          required\r\n        />\r\n        <Form.Control\r\n          style={{\r\n            textAlign: 'center'\r\n          }}\r\n          id=\"comment\"\r\n          type=\"text\"\r\n          value={comment}\r\n          placeholder='Enter your message:'\r\n          onChange={handleChangeComment}\r\n          required\r\n        />\r\n        <Button\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          style={{\r\n            width: '300px',\r\n            margin: '10px'\r\n          }}\r\n        >\r\n          Send\r\n        </Button>\r\n      </Form>\r\n      <Card style={{width: '30rem'}}>\r\n        <ListGroup style={{\r\n          display: 'flex',\r\n          flexDirection: 'column-reverse'\r\n        }}>\r\n          {comments.map(el => (\r\n            <ListGroup.Item key={el.id} style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-around',\r\n              alignItems: 'center'\r\n            }}>\r\n              {`${el.name} : ${el.comment}`}\r\n              <Button variant=\"danger\" onClick={() => deleteComment(el.id)}>Delete</Button>\r\n              </ListGroup.Item>\r\n          ))}\r\n        </ListGroup >\r\n      </Card>\r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}