{"version":3,"sources":["api/getComment.js","App.js","reportWebVitals.js","index.js"],"names":["comment","a","fetch","method","headers","body","JSON","stringify","ok","Error","getComments","resp","json","id","then","res","text","App","useState","name","setName","setComment","comments","setComments","getAllComments","data","useEffect","deleteComment","deleteCommentById","className","style","display","flexDirection","alignItems","textAlign","Form","width","onSubmit","event","preventDefault","saveComment","e","console","error","Control","margin","type","value","placeholder","onChange","target","required","Button","size","Card","ListGroup","map","el","Item","justifyContent","variant","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92417496.chunk.js","sourcesContent":["export async function setComment(comment) {\r\n  const response = await fetch(`/comment`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify(comment)\r\n  });\r\n  \r\n  if (!response.ok) throw new Error('did not save comment');\r\n}\r\n\r\nexport async function getComments() {\r\n  let resp = await fetch(`/`)\r\n  if (!resp.ok) {\r\n    throw new Error('did not get all comments');\r\n  }\r\n\r\n  return resp.json();\r\n}\r\n\r\nexport async function deleteCommentById(id) {\r\n  \r\n  await fetch(`${id}`, {\r\n    method: 'DELETE',\r\n  })\r\n  .then(res => res.text())\r\n  .then(res => res)\r\n}","import React, { useEffect, useState } from \"react\";\nimport { getComments, setComment as saveComment, deleteCommentById } from \"./api/getComment\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form, Card, ListGroup } from 'react-bootstrap';\n\nexport function App() {\n\nconst [name, setName] = useState('');\nconst [comment, setComment] = useState('');\nconst [comments, setComments] = useState([]);\n\n  async function getAllComments() {\n    const data = await getComments();\n    if (!data) return;\n    setComments(data);\n  }\n\n  useEffect(() => {\n    getAllComments();\n  }, [comments]);\n\n  const handleChangeName = (event) => {\n    setName(event.target.value);\n  }\n\n  const handleChangeComment = (event) => {\n    setComment(event.target.value);\n  }\n\n  const handleSubmitComment = event => {\n    event.preventDefault();\n\n    try {\n      saveComment({comment, name});\n    } catch(e) {\n      console.error(e)\n    }\n\n    getAllComments();\n\n    setComment('');\n  }\n\n  const deleteComment = id => {\n    deleteCommentById(id);\n  }\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        textAlign: 'center'\n      }}\n    >\n      <Form style={{width: '450px'}} onSubmit={handleSubmitComment}>\n        <Form.Control\n          style={{\n            margin: '20px 0',\n            textAlign: 'center'\n          }}\n          id=\"name\"\n          type=\"text\"\n          value={name}\n          placeholder='Enter your name:'\n          onChange={handleChangeName}\n          required\n        />\n        <Form.Control\n          style={{\n            textAlign: 'center'\n          }}\n          id=\"comment\"\n          type=\"text\"\n          value={comment}\n          placeholder='Enter your message:'\n          onChange={handleChangeComment}\n          required\n        />\n        <Button\n          size=\"lg\"\n          type=\"submit\"\n          style={{\n            width: '300px',\n            margin: '10px'\n          }}\n        >\n          Send\n        </Button>\n      </Form>\n      <Card style={{width: '30rem'}}>\n        <ListGroup style={{\n          display: 'flex',\n          flexDirection: 'column-reverse'\n        }}>\n          {comments.map(el => (\n            <ListGroup.Item key={el.id} style={{\n              display: 'flex',\n              justifyContent: 'space-around',\n              alignItems: 'center'\n            }}>\n              {`${el.name} : ${el.comment}`}\n              <Button variant=\"danger\" onClick={() => deleteComment(el.id)}>Delete</Button>\n              </ListGroup.Item>\n          ))}\n        </ListGroup >\n      </Card>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}